- name: "Stat {{ rt_download_url }} /opt"
  stat: path="{{ rt_dest_dir }}/{{ rt_pkg }}"
  register: rt_tarball

- name: "Download {{ rt_download_url }} "
  get_url: url={{ rt_download_url }} dest=/opt
  when: rt_tarball.stat.exists == False

- name: "Unarchive {{ rt_dest_dir }}/{{ rt_pkg }}"
  unarchive: src="{{ rt_dest_dir }}/{{ rt_pkg }}" dest="{{ rt_dest_dir }}" copy=no
  # without copy=no means that src= should be on a localpath. Then file will be uploadade and unarchived 

- name: Generate configuration script
  template: 
    src: roles/rt4/templates/configure_script.sh
    dest: "{{ rt_path }}/configure_script.sh"
    force: yes
    mode: 744

- name: Enable Apache2 modules 
  apache2_module: name={{ item }} state=present
  with_items:
    - ssl

- name: CPAN default env configuration
  shell: perl -MCPAN -e 'my $c = "CPAN::HandleConfig"; $c->load(doit => 1, autoconfig => 1); $c->edit(prerequisites_policy => "follow"); $c->edit(build_requires_install_policy => "yes"); $c->commit'

- name: "Configure Installation"
  shell: "{{ rt_path }}/configure_script.sh"
  
- name: "Install Perl DEPS {{ rt_path }}"
  command: chdir="{{ rt_path }}" make fixdeps

- name: "Test DEPS {{ rt_path }}"
  command: chdir="{{ rt_path }}" make testdeps

- name: "Install RT"
  command: chdir="{{ rt_path }}" make install

- name: upload sql datatabse
  template: 
    src: roles/rt4/templates/db.sql
    dest: "{{ tmp_upload_dir }}/db.sql"

- name: Create RT4 Database
  shell: "mysql -u root < {{ tmp_upload_dir }}/db.sql"

- name: Initialize DB
  command: chdir="{{ rt_path }}" make initialize-database
# otherwise
# - name: Initialize DB
  # command: chdir="{{ rt_path }}" /usr/bin/perl -I/opt/rt4/local/lib -I/opt/rt4/lib sbin/rt-setup-database --action init 

- name: Change RT root password
  command: "perl -I/opt/rt4/local/lib -I/opt/rt4/lib -MRT -MRT::User \
           -e 'RT::LoadConfig(); RT::Init(); my $u = RT::User->new($RT::SystemUser); $u->Load(\"root\"); $u->SetPassword(\"{{ rt_root_password }}\")'"

- name: Set default Admin language
  command: "mysql -u root {{ db_name }} -e \" UPDATE Users SET Lang = '{{ rt_language }}' WHERE name = 'root'; \""

- name: General configuration
  template: 
    src: roles/rt4/templates/RT_SiteConfig.pm
    dest: "{{ rt_install_dir }}/etc/RT_SiteConfig.pm"
    backup: yes
    force: yes

- name: Configure {{ rt_fqdn }} VirtualHost in Apache2
  template: 
    src: roles/rt4/templates/apache2_rt4_virtualhost.conf
    dest: "/etc/apache2/sites-available/{{ rt_fqdn }}.conf"
    force: yes

- name: Enable Apache2 modules
  apache2_module: name={{ item }} state=present
  with_items:
    - fcgid
    - alias

- name: Configure {{ rt_fqdn }} VirtualHost in Apache2
  file: 
    src: "/etc/apache2/sites-available/{{ rt_fqdn }}.conf"
    dest: "/etc/apache2/sites-enabled/{{ rt_fqdn }}.conf"
    force: yes
    state: link

- name: Restart Apache2
  service: name=apache2 state=restarted enabled=yes
