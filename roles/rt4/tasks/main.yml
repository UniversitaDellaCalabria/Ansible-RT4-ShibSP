- name: "Stat {{ rt_download_url }} /opt"
  stat: path="{{ rt_dest_dir }}/{{ rt_pkg }}"
  register: rt_tarball

- name: "Download {{ rt_download_url }} "
  get_url: url={{ rt_download_url }} dest=/opt
  when: rt_tarball.stat.exists == False

- name: "Unarchive {{ rt_dest_dir }}/{{ rt_pkg }}"
  unarchive: src="{{ rt_dest_dir }}/{{ rt_pkg }}" dest="{{ rt_dest_dir }}" copy=no
  # without copy=no means that src= should be on a localpath. Then file will be uploadade and unarchived 

- name: Generate configuration script
  template: 
    src: roles/rt4/templates/configure_script.sh
    dest: "{{ rt_path }}/configure_script.sh"
    force: yes
    mode: 744

- name: "Configure Installation"
  shell: "{{ rt_path }}/configure_script.sh"
  
- name: "Install Perl DEPS {{ rt_path }}"
  command: chdir="{{ rt_path }}" make fixdeps

- name: "Test DEPS {{ rt_path }}"
  command: chdir="{{ rt_path }}" make testdeps

- name: "Install RT"
  command: chdir="{{ rt_path }}" make install

- name: upload sql datatabse
  template: 
    src: roles/rt4/templates/db.sql
    dest: "{{ tmp_upload_dir }}/db.sql"

- name: Create RT4 Database
  shell: "mysql -u root < {{ tmp_upload_dir }}/db.sql"

- name: General configuration
  template: 
    src: roles/rt4/templates/RT_SiteConfig.pm
    dest: "{{ rt_path }}/etc/RT_SiteConfig.pm"
    backup: yes
    force: yes

- name: Initialize DB
  command: chdir="{{ rt_path }}" make initialize-database
# otherwise
# - name: Initialize DB
  # command: chdir="{{ rt_path }}" /usr/bin/perl -I/opt/rt4/local/lib -I/opt/rt4/lib sbin/rt-setup-database --action init 

- name: Change RT root password
  command: "perl -I/opt/rt4/local/lib -I/opt/rt4/lib -MRT -MRT::User \
           -e 'RT::LoadConfig(); RT::Init(); my $u = RT::User->new($RT::SystemUser); $u->Load(\"root\"); $u->SetPassword(\"{{ rt_root_password }}\")'"

- name: Configure {{ rt_fqdn }} VirtualHost in Apache2
  template: 
    src: roles/rt4/templates/apache2_rt4_virtualhost.conf
    dest: "/etc/apache2/sites-available/{{ rt_fqdn }}.conf"
    force: yes

# WARNING: Both mod_speling and mod_cache are known to break RT. mod_speling will cause RT's CSS and JS to not be loaded, making RT appear unstyled. mod_cache will cache cookies, making users be spontaneously logged in as other users in the system.
# - name: Disable Apache2 modules
  # apache2_module: name={{ item }} state=absent
  # with_items:
    # - speling
    # - cache

#WARNING: Before mod_fcgid 2.3.6, the maximum request size was 1GB. Starting in 2.3.6, this is now 128Kb. This is unlikely to be large enough for any RT install that handles attachments. You can read more about FcgidMaxRequestLen at http://httpd.apache.org/mod_fcgid/mod/mod_fcgid.html#fcgidmaxrequestlen
- name: Enable Apache2 modules
  apache2_module: name={{ item }} state=present
  with_items:
    - fcgid
    - alias

- name: Configure {{ rt_fqdn }} VirtualHost in Apache2
  file: 
    src: "/etc/apache2/sites-available/{{ rt_fqdn }}.conf"
    dest: "/etc/apache2/sites-enabled/{{ rt_fqdn }}.conf"
    force: yes
    state: link

# ================= @ the end ============================
# - name: Stat /etc/request-tracker4/apache2-modperl2.conf
  # stat: path="/etc/request-tracker4/apache2-modperl2.conf"
  # register: site_enabled
  
# - name: "Enable RT4 in Apache2"
  # shell: ln -s  /etc/request-tracker4/apache2-modperl2.conf /etc/apache2/sites-enabled/
  # when: site_enabled.stat.exists == False 

# ===== deprecated, old debian package setup ===

# - name: "copy orig {{ rt_db_conf }}"
  # shell: "mv {{ rt_db_conf }} backups"
  # ignore_errors: yes

# - name: configure DB access
  # template:
    # src: roles/rt4/templates/db_config.pm
    # dest: "{{ rt_db_conf }}"

# - name: "copy orig {{ rt_https_conf }}"
  # shell: "mv {{ rt_https_conf }} backups"
  # ignore_errors: yes

# - name: configure HTTPS hostname
  # template:
    # src: roles/rt4/templates/https_config.pm
    # dest: "{{ rt_https_conf }}"

# otherwise: Config file /etc/request-tracker4/RT_SiteConfig.pm is locked 
# - name: Change Permissions on /etc/request-tracker4/RT_SiteConfig.pm (Apache2's www-data should write on this)
  # shell: chown www-data /etc/request-tracker4/RT_SiteConfig.pm

# ==== end deprecated =========================

- name: Restart Apache2
  service: name=apache2 state=restarted enabled=yes
